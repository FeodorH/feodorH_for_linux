
#include <iostream>
#include <vector>
#include <set>
#include <string>
#include <map>

using namespace std;

void deepFound(vector <int> &v,vector<vector<int>> &g,int s) {
	v.at(s) = 1;
	if (s == 0)cout << s << " ";
	for (auto e : g.at(s)) {
		if (v.at(e) == 0) {
			cout << e << " ";
			deepFound(v, g, e);
		}
	}
}

int main() {
	vector <vector<int>> g;
	int n; cin >> n;
	int m; cin >> m;
	int a; int b;
	g.resize(n);
	for (int i = 0; i < m; i++) {
		cin >> a; cin >> b;
		g.at(a).push_back(b);
		g.at(b).push_back(a);
	}
	vector <int>visited;
	visited.resize(n);
	for (int i = 0; i < n; i++)visited.at(i) = 0;

	deepFound(visited, g, 0);
}
